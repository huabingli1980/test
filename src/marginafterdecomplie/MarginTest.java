/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package marginafterdecomplie;
import com.impinj.octane.OctaneSdkException;
import java.awt.Dimension;
import java.awt.Point;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.prefs.Preferences;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.filechooser.FileNameExtensionFilter;
import static marginafterdecomplie.MainRun.filePath;
import org.dom4j.DocumentException;
/**
 *
 * @author Huabing Li
 */
public class MarginTest extends javax.swing.JFrame {

    Point p; //保存对话盒上次弹出的位置
    Dimension d; //保持对话盒上次的大小
    public java.util.HashSet Myhashdata;
    public static BufferedReader br;
    private ResultSet rs = null;
 public static CodingForm codingForm= new CodingForm();
    /**
     * Creates new form MarginTest
     */
    public MarginTest() {
        initComponents();
        My_ip.setText("169.254.1.1");
        Codehex.setText("AAAAAAAAAAAAAAAAAAAAAAAA");
        ListT.getColumnModel().getColumn(0).setPreferredWidth(60);
        ListT.getColumnModel().getColumn(0).setMaxWidth(60);
        // ListT.getColumnModel().getColumn(0).setHeaderValue("suuuu");
        ListT.getColumnModel().getColumn(1).setPreferredWidth(120);
        ListT.getColumnModel().getColumn(2).setPreferredWidth(120);
        ListT.getColumnModel().getColumn(3).setPreferredWidth(120);
       
      
        xmlF.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                try {
                    SKU.removeAllItems();
                    PONum.removeAllItems();
                    if (xmlORcsv.getSelectedItem() == "xml") {
                        XMLParse.XMLread(xmlF.getText(),PONum,SKU);
                    } else if (xmlORcsv.getSelectedItem() == "csv") {
                        String[] args = new String[]{xmlF.getText()};
                        JDBCcsvANDsqlite.main(args);
                        getinfoFROMcsvdb();
                    }

                } catch (DocumentException | SQLException ex) {
                    Logger.getLogger(MarginTest.class.getName()).log(Level.SEVERE, null, ex);
                }

            }

            void getinfoFROMcsvdb() throws SQLException {
                String url = "jdbc:sqlite:" + filePath + "/fromCsv.db";

                String sql1 = "select distinct LOOKUPKEY from warehouses";
                  Connection conn = DriverManager.getConnection(url);
                try 
                {
              
                        Statement stmt = conn.createStatement() ;              
                   // stmt.execute(sql1);                    
                    rs = stmt.executeQuery(sql1);
                    
                    while (rs.next()) {
                     SKU.addItem(rs.getString(1));
                    }

                } catch (SQLException e) {
                    System.out.println(e.getMessage());
                }finally
                {
                    conn.close();
                }
                System.out.println("Got data from Fromcsv");
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
            }

            @Override
            public void changedUpdate(DocumentEvent e) {

            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        My_ip = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        Total1 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        ListT = new javax.swing.JTable();
        TIDEPC = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        RorW = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        Codehex = new javax.swing.JTextField();
        GetXml = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        xmlF = new javax.swing.JTextArea();
        PONum = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        GetOrderL = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        SKU = new javax.swing.JComboBox<>();
        xmlORcsv = new javax.swing.JComboBox<>();
        GotoEncoding = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("IP:");

        My_ip.setName("My_ip"); // NOI18N

        jButton1.setText("Connect");
        jButton1.setName("jButton1"); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Start");
        jButton2.setName("jButton3"); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Clear");
        jButton3.setName("ClearL"); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jTextField2.setName("Good"); // NOI18N

        jTextField3.setName("Bad"); // NOI18N

        Total1.setName("Total1"); // NOI18N

        ListT.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "seq", "Tid", "EPC", "Result", "MarginResult", "ChipType", "Barcode", "time"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(ListT);

        TIDEPC.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "TID", "EPC" }));
        TIDEPC.setName("TIDEPC"); // NOI18N

        jLabel2.setText("Margin memoryBank:");

        RorW.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ReadMargin", "WriteEpc", "WriteTid", "LockOnly", "UnLock" }));
        RorW.setName("TIDEPC"); // NOI18N
        RorW.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RorWActionPerformed(evt);
            }
        });

        jLabel3.setText("Operation Type:");

        Codehex.setName("Good"); // NOI18N

        GetXml.setText("...");
        GetXml.setName("ClearL"); // NOI18N
        GetXml.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GetXmlActionPerformed(evt);
            }
        });

        xmlF.setColumns(20);
        xmlF.setLineWrap(true);
        xmlF.setRows(5);
        jScrollPane2.setViewportView(xmlF);

        PONum.setName("TIDEPC"); // NOI18N
        PONum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PONumActionPerformed(evt);
            }
        });

        jLabel5.setText("PONumber:");

        GetOrderL.setText("Get SKU");
        GetOrderL.setName("ClearL"); // NOI18N
        GetOrderL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GetOrderLActionPerformed(evt);
            }
        });

        jLabel6.setText("SKU:");

        SKU.setName("TIDEPC"); // NOI18N
        SKU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SKUActionPerformed(evt);
            }
        });

        xmlORcsv.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "xml", "csv" }));
        xmlORcsv.setName("TIDEPC"); // NOI18N
        xmlORcsv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xmlORcsvActionPerformed(evt);
            }
        });

        GotoEncoding.setText("Go Encoding");
        GotoEncoding.setActionCommand("");
        GotoEncoding.setName("ClearL"); // NOI18N
        GotoEncoding.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GotoEncodingActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(TIDEPC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jButton3))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(My_ip, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(jButton1)
                                            .addGap(4, 4, 4)
                                            .addComponent(jButton2)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(RorW, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Total1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(Codehex, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(63, 63, 63)
                                        .addComponent(jLabel5))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel6)))
                                .addGap(28, 28, 28))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(xmlORcsv, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane2)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(PONum, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(SKU, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(GetOrderL)
                                    .addComponent(GotoEncoding))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(GetXml, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(62, 62, 62))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(My_ip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton1)
                                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jButton3)
                                    .addComponent(TIDEPC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2)
                                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(RorW, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel3))
                                    .addComponent(Total1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(xmlORcsv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(49, 49, 49)
                                .addComponent(jLabel5)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Codehex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(GetXml, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(PONum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(GetOrderL))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(SKU, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(GotoEncoding))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        ConnectOp1 Conn = new ConnectOp1();

        Conn.ConnectHost(My_ip.getText(), My_ip);

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        MarginReadTags1 Mr = new MarginReadTags1();
        Mr.Mread(ConnectOp1.reader);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // Myhashdata = MainRun.hashdata;
        
        try {
            ConnectOp1.reader.stop();
        } catch (com.impinj.octane.OctaneSdkException ex) {
            java.util.logging.Logger.getLogger(MarginTest1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        javax.swing.table.DefaultTableModel tableModel = (javax.swing.table.DefaultTableModel) ListT.getModel();
        tableModel.setRowCount(0);
        TagReptLisImplandMarginA.Myhashdata.clear();
        //TagReptLisImplandMarginA
    TagReptLisImplandMarginA.Mepclist.clear();
    TagReptLisImplandMarginA.Mtidlist.clear();
    TagReptLisImplandMarginA.epclist.clear();
    TagReptLisImplandMarginA.tidlist.clear();
    TagReptLisImplandMarginA.tidepc.clear();
    TagReptLisImplandMarginA.Resulttidepc.clear();
       /* try {
            MainRun.br1=cin_txt.getBr();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(MarginTest.class.getName()).log(Level.SEVERE, null, ex);
        }*/

        
        Total1.setText("0");        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void RorWActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RorWActionPerformed
        /*
        TableColumnModel columnModel = ListT.getColumnModel();
        Enumeration<TableColumn> tableColumns = columnModel.getColumns();
        if (RorW.getSelectedItem().toString() == "Read") {

            for (Enumeration t = tableColumns; t.hasMoreElements();) {

                TableColumn a = (TableColumn) t.nextElement();
                if ("Original EPC".equals(a.getHeaderValue().toString()) || "Original TID".equals(a.getHeaderValue().toString())) {
                    columnModel.removeColumn(a);
                }

            }

        } else if (RorW.getSelectedItem().toString() == "WriteEpc") {
            for (Enumeration t = tableColumns; t.hasMoreElements();) {

                TableColumn a = (TableColumn) t.nextElement();
                if ("Original EPC".equals(a.getHeaderValue().toString()) || "Original TID".equals(a.getHeaderValue().toString())) {
                    columnModel.removeColumn(a);
                }

            }
            TableColumn aColumn = new TableColumn(6, 120);
            aColumn.setHeaderValue("Original EPC");
            ListT.getColumnModel().addColumn(aColumn);
            ListT.getColumnModel().moveColumn(6, 2);
        } else if (RorW.getSelectedItem().toString() == "WriteTid") {
            for (Enumeration t = tableColumns; t.hasMoreElements();) {

                TableColumn a = (TableColumn) t.nextElement();
                if ("Original EPC".equals(a.getHeaderValue().toString()) || "Original TID".equals(a.getHeaderValue().toString())) {
                    columnModel.removeColumn(a);
                }

            }
            TableColumn aColumn = new TableColumn(6, 120);
            aColumn.setHeaderValue("Original TID");
            ListT.getColumnModel().addColumn(aColumn);
            ListT.getColumnModel().moveColumn(6, 1);
        }
         */
    }//GEN-LAST:event_RorWActionPerformed

    private void GetXmlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GetXmlActionPerformed
        //super.mouseClicked(arg0);            
        // KFileChooser chooser = new KFileChooser();
        KFileChooser chooser = new KFileChooser();
        //设置对话盒的位置和大小     
        if (p == null) {
            p = new Point();

        }
        if (d == null) {
            d = new Dimension();
            d.width = 1200;
            d.height = 500;

        }

        //保存对话盒的位置和大小
        //  System.out.println("the selected file is " + chooser.getSelectedFile());        
        String Folder = "C:\\";
        Preferences pref = Preferences.userRoot().node(
                this.getClass().getName());
        String lastPath = pref.get("lastPath", "");
        // p= pref.get(p, p);
        // JFileChooser fc = null;
        if (!lastPath.equals("")) {
            //  chooser = new KFileChooser(lastPath);
            chooser.setCurrentDirectory(new File(lastPath));
        } else {
            //  chooser = new JFileChooser(Folder);
            chooser.setCurrentDirectory(new File(Folder));
        }

        if (xmlORcsv.getSelectedItem() == "xml") {
            chooser.setDialogTitle("请选择xml文件...");
            FileNameExtensionFilter filter = new FileNameExtensionFilter("xml文件(*.xml)", "xml");
            chooser.setFileFilter(filter);
        } else if (xmlORcsv.getSelectedItem() == "csv") {
            chooser.setDialogTitle("请选择csv文件...");
            FileNameExtensionFilter filter = new FileNameExtensionFilter("csv文件(*.csv)", "csv");
            chooser.setFileFilter(filter);
        }

        int result = chooser.showOpenDialog(this, p, d);
        chooser.getLastLocationAndSize(p, d);
        Folder = chooser.getSelectedFile().getPath();
        // Folder = chooser.
        String filePath = chooser.getSelectedFile().getAbsolutePath();

        pref.put("lastPath", Folder);
        xmlF.setText(filePath);
    }//GEN-LAST:event_GetXmlActionPerformed

    private void PONumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PONumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PONumActionPerformed

    private void GetOrderLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GetOrderLActionPerformed
        // XPathDemo xmlp= new XPathDemo();
        try {
            XMLParse.XMLread(xmlF.getText(),PONum,SKU);
        } catch (Exception ex) {
            Logger.getLogger(MarginTest.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_GetOrderLActionPerformed

    private void SKUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SKUActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SKUActionPerformed

    private void xmlORcsvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xmlORcsvActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_xmlORcsvActionPerformed

    private void GotoEncodingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GotoEncodingActionPerformed
      
         codingForm.setVisible(true);
    }//GEN-LAST:event_GotoEncodingActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MarginTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MarginTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MarginTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MarginTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MarginTest().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTextField Codehex;
    private javax.swing.JButton GetOrderL;
    public javax.swing.JButton GetXml;
    private javax.swing.JButton GotoEncoding;
    public javax.swing.JTable ListT;
    public javax.swing.JTextField My_ip;
    public javax.swing.JComboBox<String> PONum;
    public javax.swing.JComboBox<String> RorW;
    public javax.swing.JComboBox<String> SKU;
    public javax.swing.JComboBox<String> TIDEPC;
    public javax.swing.JTextField Total1;
    public javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private static javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    public javax.swing.JTextField jTextField2;
    public javax.swing.JTextField jTextField3;
    public javax.swing.JTextArea xmlF;
    public javax.swing.JComboBox<String> xmlORcsv;
    // End of variables declaration//GEN-END:variables
}
